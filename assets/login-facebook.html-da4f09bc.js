import{_ as c,X as i,Y as l,Z as n,$ as s,a0 as a,a1 as r,a2 as t,E as o}from"./framework-f01f539c.js";const u="/assets/images/facebook-login.jpg",d={},k=n("h1",{id:"facebook登陆",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#facebook登陆","aria-hidden":"true"},"#"),s(" Facebook登陆")],-1),v=n("p",null,"说句题外话：其实知道怎么写以后，写代码是相较简单的，比较难得地方是不知道该去哪找参考资料，如果遇见问题或者是难点去哪解决，所以每次写博客的时候尽量详细写一些找资料的过程，代码部分反而是其次的。",-1),h=n("p",null,"接下来就开启我们的Facebook登陆之旅",-1),b=n("h2",{id:"官方文档",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#官方文档","aria-hidden":"true"},"#"),s(" 官方文档")],-1),m={href:"https://developers.facebook.com/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://developers.facebook.com/docs/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://developers.facebook.com/docs/facebook-login",target:"_blank",rel:"noopener noreferrer"},f={href:"https://developers.facebook.com/docs/facebook-login/guides/access-tokens",target:"_blank",rel:"noopener noreferrer"},q={href:"https://developers.facebook.com/docs/graph-api/overview",target:"_blank",rel:"noopener noreferrer"},y=t(`<h2 id="访问口令" tabindex="-1"><a class="header-anchor" href="#访问口令" aria-hidden="true">#</a> 访问口令</h2><p>下面介绍一下各种访问口令，我这边之前做过Facebook广告数据的获取用到其他类型的访问口令，所以这边都介绍一下</p><h3 id="用户访问口令" tabindex="-1"><a class="header-anchor" href="#用户访问口令" aria-hidden="true">#</a> 用户访问口令</h3><hr><p>应用任何时候以特定用户身份调用 API 读取、修改或写入该用户的 Facebook 数据时，都需要此类访问口令。通常可通过登录对话框获得用户访问口令，并且应用需征得用户允许才能获取此口令。</p><p>这个也是咱们使用Facebook登陆要用到的</p><p>用户访问口令分为两种形式：短期有效口令和长期有效口令。短期有效口令的有效期通常为一至两个小时，长期有效口令的有效期通常为60天左右。这些有效期也不是一直维持不变；有效期可能会在不发出警告的情况下发生更改，也有可能会提前到期。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>通过网页登录生成的访问口令是短期有效口令，可以使用应用密钥执行服务器端API调用，将它们转换为长期有效口令。</p><p>使用 Facebook iOS 和 Android SDK 的移动应用默认获得长期有效口令。</p></div><h3 id="应用访问口令" tabindex="-1"><a class="header-anchor" href="#应用访问口令" aria-hidden="true">#</a> 应用访问口令</h3><hr><p>此类访问口令用于修改和读取应用设置，也可用于发布开放图谱操作。它使用应用与 Facebook 之间的预定义密钥生成，之后用于执行更改应用中各个设置的调用。可以通过服务器到服务器的调用获得应用访问口令。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>应用访问口令用于代表应用而非用户请求 Facebook API。它可以用于修改应用参数、创建和管理测试用户，或者读取应用的成效分析。</p></div><p>生成应用访问口令</p><ul><li>应用编号</li><li>应用密钥</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>代码示例
<span class="token function">curl</span> <span class="token parameter variable">-X</span> GET <span class="token string">&quot;https://graph.facebook.com/oauth/access_token
  ?client_id={your-app-id}
  &amp;client_secret={your-app-secret}
  &amp;grant_type=client_credentials&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还有一种方法可以向图谱 API 发出调用，并且不需要使用生成的应用访问口令。您可以在发出调用时以 access_token 参数的形式发送应用编号和应用密钥：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-X</span> GET <span class="token string">&quot;https://graph.facebook.com/{api-endpoint}&amp;access_token={your-app_id}|{your-app_secret}&quot;</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>选择使用生成的访问口令还是使用这种方法取决于您隐藏应用密钥的位置。</p></div><h3 id="公共主页访问口令" tabindex="-1"><a class="header-anchor" href="#公共主页访问口令" aria-hidden="true">#</a> 公共主页访问口令</h3><hr><p>此类访问口令与用户访问口令类似，区别在于该口令会向读取、写入或修改 Facebook 公共主页数据的 API 授予权限。如要获取公共主页访问口令，需要先获取用户访问口令，并请求公共主页权限或其他您需要的权限。拥有用户访问口令后，便可通过图谱 API 获取公共主页访问口令。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>如要生成公共主页访问口令，公共主页管理员必须向应用授予公共主页权限或所需的其他权限。获得权限后，便可使用拥有必要权限的用户访问口令，检索公共主页访问口令。</p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-X</span> GET &quot;https://graph.facebook.com/<span class="token punctuation">{</span>your-user-id<span class="token punctuation">}</span>/accounts?access_token<span class="token operator">=</span><span class="token punctuation">{</span>user-access-token<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="客户端访问口令" tabindex="-1"><a class="header-anchor" href="#客户端访问口令" aria-hidden="true">#</a> 客户端访问口令</h3><hr><p>客户端口令是可将其嵌入原生移动二进制文件或桌面应用以识别应用的标识符。客户端口令嵌入在应用中，因而不是密钥标识符。客户端口令用于访问应用层 API。客户端口令可在应用面板中找到。</p><div class="hint-container danger"><p class="hint-container-title">警告</p><p>从预计在 2022 年初发布的 iOS 和 Android SDK v13.0 开始，所有对图谱 API 的调用都将需要客户端口令。</p></div><p>与应用口令一样，客户端口令会代表应用而非用户发出Graph API 请求。</p><p>不同于其他口令，客户端访问口令无法单独在请求中使用，而须配合应用编号使用。如要执行此操作，请在应用编号末尾附加口令，并使用竖线 (|) 分隔：</p><p><code>{app-id}|{client-token}</code></p><p>例如：</p><p><code>access_token=1234|5678</code></p><p>如要获取应用的客户端访问口令，请执行以下操作：</p><ul><li>登录您的开发者帐户。</li><li>在应用页面中选择一款应用，然后打开该应用的面板。</li><li>在面板中，依次前往设置 &gt; 高级设置 &gt; 安全 &gt; 客户端口令。</li></ul><h2 id="可移植性" tabindex="-1"><a class="header-anchor" href="#可移植性" aria-hidden="true">#</a> 可移植性</h2>`,35),x={href:"https://developers.facebook.com/docs/facebook-login/access-tokens/portability",target:"_blank",rel:"noopener noreferrer"},S=n("p",null,"我们作为只是使用Facebook登陆，并且想要用户只要登陆授权一次，客户端登录状态就会保存不用频繁调用Facebook，那么就需要服务端来保存权限信息，并能读取、校验用户状态了，所以直接这里就选用的是：",-1),A=n("p",null,"正式开始",-1),w=n("h2",{id:"facebook授权登陆-服务端",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#facebook授权登陆-服务端","aria-hidden":"true"},"#"),s(" Facebook授权登陆(服务端)")],-1),I=n("h3",{id:"facebook配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#facebook配置","aria-hidden":"true"},"#"),s(" Facebook配置")],-1),j={href:"https://developers.facebook.com",target:"_blank",rel:"noopener noreferrer"},P=n("li",null,"点击右上角->我的应用->创建应用",-1),T=n("li",null,"获取应用编号、应用密钥(后续开发使用)",-1),E=n("li",null,"开通登录,点击左边产品->添加产品->登录",-1),F={class:"hint-container tip"},O=n("p",{class:"hint-container-title"},"提示",-1),R=n("p",null,"整个流程可以通过Facebook的API调试工具测试：",-1),C={href:"https://developers.facebook.com/docs/graph-api/get-started",target:"_blank",rel:"noopener noreferrer"},G={href:"https://developers.facebook.com/tools/explorer",target:"_blank",rel:"noopener noreferrer"},N=t('<h3 id="facebook登陆流程图" tabindex="-1"><a class="header-anchor" href="#facebook登陆流程图" aria-hidden="true">#</a> Facebook登陆流程图</h3><figure><img src="'+u+'" alt="登陆流程图" tabindex="0" loading="lazy"><figcaption>登陆流程图</figcaption></figure><h2 id="token校验" tabindex="-1"><a class="header-anchor" href="#token校验" aria-hidden="true">#</a> token校验</h2>',3),M={href:"https://developers.facebook.com/docs/facebook-login/guides/%20access-tokens/debugging",target:"_blank",rel:"noopener noreferrer"},D=t(`<p>访问api：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-X</span> GET &quot;https://graph.facebook.com/debug_token?input_token<span class="token operator">=</span><span class="token punctuation">{</span>input-token<span class="token punctuation">}</span><span class="token operator">&amp;</span><span class="token assign-left variable">access_token</span><span class="token operator">=</span><span class="token punctuation">{</span>valid-access-token<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>接口中的access_token和input_token均是客户端传递的token值</p></div><p>API 调用的响应为 JSON 数组，如下所示：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;app_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;{app-id}&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;USER&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;application&quot;</span><span class="token operator">:</span><span class="token string">&quot;{app-name}&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;data_access_expires_at&quot;</span><span class="token operator">:</span><span class="token number">1576687825</span><span class="token punctuation">,</span>
        <span class="token property">&quot;expires_at&quot;</span><span class="token operator">:</span><span class="token number">1570820400</span><span class="token punctuation">,</span>
        <span class="token property">&quot;is_valid&quot;</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;scopes&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
            <span class="token string">&quot;pages_show_list&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;public_profile&quot;</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;granular_scopes&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;scope&quot;</span><span class="token operator">:</span><span class="token string">&quot;pages_show_list&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;target_ids&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                    <span class="token string">&quot;{page-1-app-can-access-id}&quot;</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;{page-2-app-can-access-id}&quot;</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;user_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;10215241773831025&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果是长期访问口令，则系统也会返回 issued_at 字段。</p><h2 id="获取长期访问口令" tabindex="-1"><a class="header-anchor" href="#获取长期访问口令" aria-hidden="true">#</a> 获取长期访问口令</h2>`,7),K={href:"https://developers.facebook.com/docs/facebook-login/guides/access-tokens/get-long-lived",target:"_blank",rel:"noopener noreferrer"},U=t(`<p>在使用 iOS、Android 或 JavaScript SDK 时，如果用户在最近 90 天使用过应用，SDK 会自动刷新口令。使用 Facebook SDK 的原生移动应用会获得有效期为 60 天左右的长期用户访问口令。当应用用户向 Facebook 服务器发出请求时，系统会每天刷新一次这些口令。如果未发出任何请求，口令就会在大约 60 天后过期，且用户必须再次登录才能获得新口令。</p><p>如果需要长期用户访问口令，可以从短期用户访问口令中生成。长期口令的有效期通常在 60 天左右。</p><p>需要准备以下各项：</p><ul><li>一个有效的用户访问口令</li><li>应用编号</li><li>应用密钥 查询 GET oauth/access_token 端点。</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-X</span> GET <span class="token string">&quot;https://graph.facebook.com/{graph-api-version}/oauth/access_token?  
    grant_type=fb_exchange_token&amp;          
    client_id={app-id}&amp;
    client_secret={app-secret}&amp;
    fb_exchange_token={your-access-token}&quot;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>响应示例:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;access_token&quot;</span><span class="token operator">:</span><span class="token string">&quot;{long-lived-user-access-token}&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;token_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bearer&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;expires_in&quot;</span><span class="token operator">:</span> <span class="token number">5183944</span>            <span class="token comment">//The number of seconds until the token expires</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="获取用户信息" tabindex="-1"><a class="header-anchor" href="#获取用户信息" aria-hidden="true">#</a> 获取用户信息</h2>`,8),X={href:"https://developers.facebook.com/docs/graph-api/overview",target:"_blank",rel:"noopener noreferrer"},J=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-X</span> GET <span class="token punctuation">\\</span>
  <span class="token string">&quot;https://graph.facebook.com/USER-ID?fields=id,name,email,picture&amp;access_token=ACCESS-TOKEN&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>注意事项 接口中的access_token指的是前面配置中获取的应用编号和应用密钥组合，值为{Your AppId}|{Your AppSecret}, 记得请求路径做urlEncode</p></div><h2 id="官方工具" tabindex="-1"><a class="header-anchor" href="#官方工具" aria-hidden="true">#</a> 官方工具</h2>`,3),L={href:"https://developers.facebook.com/tools/explorer/",target:"_blank",rel:"noopener noreferrer"},B=t(`<p>很贴心，一进去就是登陆的请求</p><p>直接点击获取Generate Access Token：</p><p>可以看见官方请求的地址大概是这样</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>https://www.facebook.com/v16.0/dialog/oauth?response_type<span class="token operator">=</span>token<span class="token operator">&amp;</span><span class="token assign-left variable">client_id</span><span class="token operator">=</span><span class="token number">127819966950874</span><span class="token operator">&amp;</span><span class="token assign-left variable">redirect_uri</span><span class="token operator">=</span>http://localhost:8093/jingxc/facebook/login/callback<span class="token operator">&amp;</span><span class="token assign-left variable">scope</span><span class="token operator">=</span>public_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也就是说我们修改redirect_uri就可以得到一个access_token，这里就相当于模拟客户端的请求登陆了，然后我们验证和获取用户信息</p><h3 id="获取token" tabindex="-1"><a class="header-anchor" href="#获取token" aria-hidden="true">#</a> 获取token</h3><p>返回：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;access_token&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
        <span class="token string">&quot;EAAB0QGe5rdoBAKP8v2u6sLXquobvqMtZCZBA084FkG0jQOTJGhY96A55rr6IXFnyI9s87AmKnftUfrpW1AnxPuhhUXXnYtCCSLa5B7oyVktYSqhx6KDzM9ey4DyoxJ1PoCcMcnB7liVPN8nMkrPqOMQRx9xyrLoKPh6OiIh8rLKNkpRvWDqcQkefwE6poh6zqygeJCJ2lM5yjZBeP0PDhkvChJuVeEdKpc0x9iySlk3ojd7QZCeVvyRlUONIRXoZD&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;data_access_expiration_time&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
        <span class="token string">&quot;1690719298&quot;</span><span class="token comment">//这个时间有两个月</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;expires_in&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
        <span class="token string">&quot;6302&quot;</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="校验token" tabindex="-1"><a class="header-anchor" href="#校验token" aria-hidden="true">#</a> 校验token</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">ReturnResult</span> <span class="token function">checkToken</span><span class="token punctuation">(</span><span class="token class-name">String</span> accessToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;https://graph.facebook.com/debug_token?input_token=&quot;</span> <span class="token operator">+</span>
            accessToken <span class="token operator">+</span> <span class="token string">&quot;&amp;access_token=&quot;</span> <span class="token operator">+</span> accessToken<span class="token punctuation">;</span>

    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> checkToken <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">getToMap</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>checkToken<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">ReturnResultSuccess</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token class-name">ConstantCommon</span><span class="token punctuation">.</span><span class="token constant">RETURN_CODE_200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">msg</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>checkToken<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;metadata&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;auth_type&quot;</span><span class="token operator">:</span><span class="token string">&quot;rerequest&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;expires_at&quot;</span><span class="token operator">:</span><span class="token number">1682949600</span><span class="token punctuation">,</span>
        <span class="token property">&quot;application&quot;</span><span class="token operator">:</span><span class="token string">&quot;LOGIN&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;user_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;200435082771639&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;is_valid&quot;</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;data_access_expires_at&quot;</span><span class="token operator">:</span><span class="token number">1690719298</span><span class="token punctuation">,</span>
        <span class="token property">&quot;scopes&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
            <span class="token string">&quot;public_profile&quot;</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;USER&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;app_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;127819966950874&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取用户信息-1" tabindex="-1"><a class="header-anchor" href="#获取用户信息-1" aria-hidden="true">#</a> 获取用户信息</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@OperationLogger</span>
<span class="token keyword">public</span> <span class="token class-name">ReturnResult</span> <span class="token function">checkUser</span><span class="token punctuation">(</span><span class="token class-name">String</span> accessToken<span class="token punctuation">,</span> <span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;https://graph.facebook.com/&quot;</span> <span class="token operator">+</span> userId <span class="token operator">+</span> <span class="token string">&quot;?fields=id,name&quot;</span>
            <span class="token operator">+</span> <span class="token string">&quot;&amp;access_token=&quot;</span> <span class="token operator">+</span> accessToken<span class="token punctuation">;</span>

    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> checkUser <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">getToMap</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>checkUser<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">ReturnResultSuccess</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token class-name">ConstantCommon</span><span class="token punctuation">.</span><span class="token constant">RETURN_CODE_200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">msg</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>checkUser<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;景兴春&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token string">&quot;200435082771639&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>上面的accessToken均为用户登陆授权的token</p><p>获取用户信息也可以换成-应用访问口令</p></div><p>至此Facebook的登陆基本完成</p>`,18),V=n("li",null,[n("strong",null,"本文作者："),s(" 景兴春")],-1),Y=n("strong",null,"本文链接：",-1),Z={href:"https://www.jingxc.top/back/login/login-facebook.html",target:"_blank",rel:"noopener noreferrer"},H=n("strong",null,"版权声明：",-1),Q={href:"https://www.apache.org/licenses/LICENSE-2.0.html",target:"_blank",rel:"noopener noreferrer"};function z(W,$){const e=o("ExternalLinkIcon"),p=o("font");return i(),l("div",null,[k,v,h,b,n("ul",null,[n("li",null,[s("首先登陆官方的开发者平台"),n("a",m,[s("开发者平台"),a(e)])]),n("li",null,[s("直接在页面上点击登陆详情或者顶部导航栏文档-登陆都可，如果要找其他文档直接进入"),n("a",g,[s("文档地址"),a(e)])]),n("li",null,[s("进入"),n("a",_,[s("登陆文档"),a(e)]),s(",可以看看概览什么的，或者可以直接进入指南"),n("a",f,[s("Guides"),a(e)])]),n("li",null,[n("a",q,[s("Graph API"),a(e)]),s("，在 Facebook 开放平台中存取数据,服务端获取用户信息会用到")])]),y,n("p",null,[s("上面我们看到了好多种访问口令，弄的乱乱的，不知到怎么使用了，可以参考一下"),n("a",x,[s("可移植性文档"),a(e)]),s("做一个合适的了解以及选取")]),S,a(p,{color:"red"},{default:r(()=>[s("在原生手机客户端或网页客户端登录。在服务器发出 API 请求（使用长期口令）。")]),_:1}),A,w,I,n("ul",null,[n("li",null,[s("注册成为开发者,在"),n("a",j,[s("Facebook开发者官网"),a(e)]),s("注册成开发者")]),P,T,E]),n("div",F,[O,R,n("p",null,[n("a",C,[s("用户信息获取入门指南"),a(e)])]),n("p",null,[n("a",G,[s("API工具"),a(e)])])]),N,n("p",null,[s("在使用访问口令时，需要检查与之相关的信息，如该口令的用户或有效期。如要获取此类信息，可使用Facebook的调试工具，或使用 API 端点。 "),n("a",M,[s("调试和错误"),a(e)])]),D,n("p",null,[s("默认的用户和主页访问口令为短期口令，会在数小时后过期，但可以使用短期口令交换"),n("a",K,[s("长期口令"),a(e)]),s("。")]),U,n("p",null,[s("Graph API是在 Facebook 开放平台中存取数据的主要方式。Graph API是一种基于 HTTP 的 API，应用可用其以编程方式查询数据，发布新动态，管理广告，上传照片和执行各种其他任务。 "),n("a",X,[s("获取用户信息Graph API"),a(e)]),s(" 接口请求地址：")]),J,n("p",null,[s("快使用官方工具试一试吧： "),n("a",L,[s("https://developers.facebook.com/tools/explorer/"),a(e)])]),B,n("ul",null,[V,n("li",null,[Y,s(),n("a",Z,[s("https://www.jingxc.top/back/login/login-facebook.html"),a(e)])]),n("li",null,[H,s(" 本博客所有文章除特别声明外，均采用 "),n("a",Q,[s("Apache License 2.0"),a(e)]),s(" 许可协议。转载请注明出处！")])])])}const sn=c(d,[["render",z],["__file","login-facebook.html.vue"]]);export{sn as default};
