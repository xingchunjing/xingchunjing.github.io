const e=JSON.parse('{"key":"v-652b5526","path":"/spring/more-mysql.html","title":"多数据源","lang":"zh-CN","frontmatter":{"icon":"mysql","date":"2020-12-23T00:00:00.000Z","category":["java","后端"],"tag":["java","后端","Mysql"],"star":true,"description":"多数据源 工作中，在业务的发展或业务数据隔离的场景下，或者本身用的是不用类型的数据库，这就需要引入多数据源的配置，这里着重讲述如何进行配置，我们可能会遇到下面的情况 1）同一个项目中涉及两个或多个业务数据库，它们之间相互独立，这种情况也可以作为两个或多个项目来开发 2）两个或多个数据库之间是主从关系，主库负责写，从库负责读（建议使用数据库中间件，如sharding-sphere） 3）业务存储在不同类型的数据库里，如oracle和mysql maven依赖 版本可根据需求添加，查找版本情况","head":[["meta",{"property":"og:url","content":"https://gitee.com/jing-xingchun/spring/more-mysql.html"}],["meta",{"property":"og:site_name","content":"Jingxc"}],["meta",{"property":"og:title","content":"多数据源"}],["meta",{"property":"og:description","content":"多数据源 工作中，在业务的发展或业务数据隔离的场景下，或者本身用的是不用类型的数据库，这就需要引入多数据源的配置，这里着重讲述如何进行配置，我们可能会遇到下面的情况 1）同一个项目中涉及两个或多个业务数据库，它们之间相互独立，这种情况也可以作为两个或多个项目来开发 2）两个或多个数据库之间是主从关系，主库负责写，从库负责读（建议使用数据库中间件，如sharding-sphere） 3）业务存储在不同类型的数据库里，如oracle和mysql maven依赖 版本可根据需求添加，查找版本情况"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-07T12:30:27.000Z"}],["meta",{"property":"article:author","content":"Jingxc"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"后端"}],["meta",{"property":"article:tag","content":"Mysql"}],["meta",{"property":"article:published_time","content":"2020-12-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-07T12:30:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"多数据源\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-12-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-07T12:30:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jingxc\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"maven依赖","slug":"maven依赖","link":"#maven依赖","children":[]},{"level":2,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]},{"level":2,"title":"数据源配置","slug":"数据源配置","link":"#数据源配置","children":[{"level":3,"title":"数据源1","slug":"数据源1","link":"#数据源1","children":[]},{"level":3,"title":"数据源2","slug":"数据源2","link":"#数据源2","children":[]}]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"补充批量操作","slug":"补充批量操作","link":"#补充批量操作","children":[{"level":3,"title":"原有mapper","slug":"原有mapper","link":"#原有mapper","children":[]},{"level":3,"title":"增加service","slug":"增加service","link":"#增加service","children":[]},{"level":3,"title":"使用","slug":"使用-1","link":"#使用-1","children":[]}]}],"git":{"createdTime":1683462627000,"updatedTime":1683462627000,"contributors":[{"name":"jingxc","email":"2584982513@qq.com","commits":1}]},"readingTime":{"minutes":3.86,"words":1157},"filePathRelative":"spring/more-mysql.md","localizedDate":"2020年12月23日","excerpt":"<h1> 多数据源</h1>\\n<p>工作中，在业务的发展或业务数据隔离的场景下，或者本身用的是不用类型的数据库，这就需要引入多数据源的配置，这里着重讲述如何进行配置，我们可能会遇到下面的情况</p>\\n<p>1）同一个项目中涉及两个或多个业务数据库，它们之间相互独立，这种情况也可以作为两个或多个项目来开发</p>\\n<p>2）两个或多个数据库之间是主从关系，主库负责写，从库负责读（建议使用数据库中间件，如sharding-sphere）</p>\\n<p>3）业务存储在不同类型的数据库里，如oracle和mysql</p>\\n<h2> maven依赖</h2>\\n<p>版本可根据需求添加，<a href=\\"https://mvnrepository.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">查找版本情况</a></p>","autoDesc":true}');export{e as data};
