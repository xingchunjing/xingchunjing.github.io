import{_ as c,X as d,Y as p,Z as a,$ as n,a0 as s,a1 as r,a4 as e,E as t}from"./framework-a5b3b151.js";const o={},u=e(`<h1 id="日志收集器" tabindex="-1"><a class="header-anchor" href="#日志收集器" aria-hidden="true">#</a> 日志收集器</h1><h2 id="需求-目的" tabindex="-1"><a class="header-anchor" href="#需求-目的" aria-hidden="true">#</a> 需求(目的)</h2><p>目前需要对来自不同日志源的数据进行日志收集，日志源主要分为三个部分：</p><ul><li>SDK客户端</li><li>游戏客户端</li><li>游戏服务端</li></ul><p>针对不同的源的日志，采用Spring Boot/Cloud 进行收集并对部分源的数据进行二次整理分装（不同源的字段和数据格式可能会有所不同，需要二次查询、整理、分装）然后进行日志存储</p><p>存储形式包括，数据库存储，以及日志文件存储，由于是多台服务进行日志数据的二次分装，日志服务器为统一的日志服务器，所以需要日志收集器作为收集和存储</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>需要从不同服务器上收集日志并将其存储到统一的日志文件或日志服务器时,以下几款日志收集器可以作为备选目标</p><ul><li>Fluentd</li><li>Logstash</li><li>Flume</li><li>Filebeat</li></ul></div><h2 id="收集器对比" tabindex="-1"><a class="header-anchor" href="#收集器对比" aria-hidden="true">#</a> 收集器对比</h2><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">Logstash</th><th style="text-align:center;">Filebeat</th><th style="text-align:center;">Flume</th><th style="text-align:center;">Fluentd</th></tr></thead><tbody><tr><td style="text-align:center;">运行环境</td><td style="text-align:center;">java</td><td style="text-align:center;">go</td><td style="text-align:center;">java</td><td style="text-align:center;">ruby</td></tr><tr><td style="text-align:center;">资源开销</td><td style="text-align:center;">占用较高的CPU和内存资源</td><td style="text-align:center;">资源消耗较低</td><td style="text-align:center;">占用较低的CPU和内存资源</td><td style="text-align:center;">资源消耗较低</td></tr><tr><td style="text-align:center;">配置</td><td style="text-align:center;">简单</td><td style="text-align:center;">简单</td><td style="text-align:center;">较复杂</td><td style="text-align:center;">复杂</td></tr><tr><td style="text-align:center;">可靠性</td><td style="text-align:center;">较稳定</td><td style="text-align:center;">稳定</td><td style="text-align:center;">高可靠</td><td style="text-align:center;">可靠</td></tr><tr><td style="text-align:center;">支持的数据源</td><td style="text-align:center;">多种数据源（文件、网络、消息队列等）</td><td style="text-align:center;">文件</td><td style="text-align:center;">多种数据源（文件、网络、消息队列等）</td><td style="text-align:center;">多种数据源（文件、网络、消息队列等）</td></tr><tr><td style="text-align:center;">插件生态系统</td><td style="text-align:center;">丰盛的插件支持</td><td style="text-align:center;">合适度的插件支持</td><td style="text-align:center;">丰盛的插件支持</td><td style="text-align:center;">丰盛的插件支持</td></tr><tr><td style="text-align:center;">数据转换和过滤</td><td style="text-align:center;">支持强大的数据转换和过滤功能</td><td style="text-align:center;">不支持数据转换和过滤功能</td><td style="text-align:center;">有限的数据转换和过滤功能</td><td style="text-align:center;">支持强大的数据转换和过滤功能</td></tr><tr><td style="text-align:center;">目标系统支持</td><td style="text-align:center;">多种输出插件支持</td><td style="text-align:center;">适度的输出插件支持</td><td style="text-align:center;">有限的输出支持</td><td style="text-align:center;">多种输出插件支持</td></tr><tr><td style="text-align:center;">可扩展性</td><td style="text-align:center;">可水平扩展</td><td style="text-align:center;">可水平扩展</td><td style="text-align:center;">可水平扩展</td><td style="text-align:center;">可水平扩展</td></tr><tr><td style="text-align:center;">社区支持</td><td style="text-align:center;">大型活跃社区</td><td style="text-align:center;">大型活跃社区</td><td style="text-align:center;">有限的社区支持</td><td style="text-align:center;">大型活跃社区</td></tr><tr><td style="text-align:center;">学习曲线</td><td style="text-align:center;">需要较高的学习曲线</td><td style="text-align:center;">简单易上手</td><td style="text-align:center;">中等学习曲线</td><td style="text-align:center;">中等学习曲线</td></tr><tr><td style="text-align:center;">性能利用率</td><td style="text-align:center;">高</td><td style="text-align:center;">高</td><td style="text-align:center;">高</td><td style="text-align:center;">高</td></tr><tr><td style="text-align:center;">吞吐量</td><td style="text-align:center;">高</td><td style="text-align:center;">中等</td><td style="text-align:center;">高</td><td style="text-align:center;">高</td></tr><tr><td style="text-align:center;">日志生成格式</td><td style="text-align:center;">支持多种日志格式，可自定义日志解析规则</td><td style="text-align:center;">支持多种日志格式，包括JSON和其他格式</td><td style="text-align:center;">支持自定义的日志格式，可使用各种解析器</td><td style="text-align:center;">支持多种日志格式，可自定义日志解析规则</td></tr></tbody></table><h2 id="简单安装及使用" tabindex="-1"><a class="header-anchor" href="#简单安装及使用" aria-hidden="true">#</a> 简单安装及使用</h2><p>下面介绍均基于 数据源：来自http 输出源：log文件</p><h3 id="logstash" tabindex="-1"><a class="header-anchor" href="#logstash" aria-hidden="true">#</a> Logstash</h3><hr><ol><li>安装Logstash：</li></ol><p>打开终端并执行以下命令，下载并安装Logstash的公共存储库：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-qO</span> - https://artifacts.elastic.co/GPG-KEY-elasticsearch <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> apt-transport-https
<span class="token builtin class-name">echo</span> <span class="token string">&quot;deb https://artifacts.elastic.co/packages/7.x/apt stable main&quot;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/elastic-7.x.list
<span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> logstash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),v=e(`<ol start="2"><li>配置文件</li></ol><p>默认情况下，Logstash的配置文件位于/etc/logstash/conf.d/目录下。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>input {
  http {
    host =&gt; &quot;0.0.0.0&quot;
    port =&gt; 8080
  }
}

output {
  file {
    path =&gt; &quot;/path/to/log/file.log&quot;
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>host =&gt; “0.0.0.0” 意味着开放远程连接</p><p>插件监听本地主机的8080端口</p><p>接收数据。然后，通过文件输入插件将接收到的数据写入指定的日志文件。</p></div><ol start="3"><li>启动：</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cd logstash-7.6.2/bin
./logstash -f logstash.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filebeat" tabindex="-1"><a class="header-anchor" href="#filebeat" aria-hidden="true">#</a> Filebeat</h3><hr><ol><li>安装Filebeat</li></ol><p>打开终端并执行以下命令，下载并安装Filebeat的公共存储库：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-L</span> <span class="token parameter variable">-O</span> https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.1-amd64.deb
<span class="token function">sudo</span> dpkg <span class="token parameter variable">-i</span> filebeat-7.15.1-amd64.deb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：请根据所使用的Filebeat版本和系统结构替换上描述命令中的文件名。</p><ol start="2"><li>修改Filebeat配置文件 默认配置文件位于/etc/filebeat/filebeat.yml</li></ol><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">filebeat.inputs</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> http
  <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">paths</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">8080</span>

<span class="token key atrule">output.file</span><span class="token punctuation">:</span>
  <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/path/to/log/file.log&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),m={href:"http://localhost:8080",target:"_blank",rel:"noopener noreferrer"},g=e(`<ol start="3"><li>启动 输入以下命令启动Filebeat：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">service</span> filebeat start

<span class="token comment">#如果使用的是Systemd服务管理器，则可以使用以下命令：</span>
<span class="token function">sudo</span> systemctl start filebeat

<span class="token comment">#想要在启动时指定其他配置文件，可以使用-c参数，例如：</span>
<span class="token function">sudo</span> systemctl start filebeat <span class="token parameter variable">-c</span> /path/to/filebeat.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flume" tabindex="-1"><a class="header-anchor" href="#flume" aria-hidden="true">#</a> Flume</h3><hr><ol><li>下载安装 在Apache Flume官方网站或镜像站上下载适用于Linux的Flume安装包。选择与操作系系统和结构对应于最新的稳定版本。</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> xzf flume-x.x.x-bin.tar.gz

<span class="token comment">##环境变量</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">FLUME_HOME</span><span class="token operator">=</span>/opt/flume
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$FLUME_HOME</span>/bin:<span class="token environment constant">$PATH</span>

<span class="token comment">#执行启用</span>
<span class="token builtin class-name">source</span> ~/.bashrc
<span class="token comment">#或者</span>
<span class="token builtin class-name">source</span> ~/.bash_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>配置文件 Flume的配置文件位于Flume安装目录的conf子目录中</li></ol><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">agent.sources</span> <span class="token punctuation">=</span> <span class="token value attr-value">http-source</span>
<span class="token key attr-name">agent.sources.http-source.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">org.apache.flume.source.http.HTTPSource</span>
<span class="token key attr-name">agent.sources.http-source.port</span> <span class="token punctuation">=</span> <span class="token value attr-value">8080</span>

<span class="token key attr-name">agent.channels</span> <span class="token punctuation">=</span> <span class="token value attr-value">memory-channel</span>
<span class="token key attr-name">agent.channels.memory-channel.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">memory</span>

<span class="token key attr-name">agent.sinks</span> <span class="token punctuation">=</span> <span class="token value attr-value">file-sink</span>
<span class="token key attr-name">agent.sinks.file-sink.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">hdfs</span>
<span class="token key attr-name">agent.sinks.file-sink.hdfs.path</span> <span class="token punctuation">=</span> <span class="token value attr-value">/path/to/log/file.log</span>

<span class="token key attr-name">agent.sources.http-source.channels</span> <span class="token punctuation">=</span> <span class="token value attr-value">memory-channel</span>
<span class="token key attr-name">agent.sinks.file-sink.channel</span> <span class="token punctuation">=</span> <span class="token value attr-value">memory-channel</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面描述的配置中，Flume通过HTTPSource插件监听本地主机的8080端口，接收数据。然后，将数据通过HDFS Sink插件写入指定的日志文件。</p><ul><li>代理名（代理名是Flume的实例标志符）</li><li>来源（数据来源）的类型和属性</li><li>channel（通道）的类型和属性</li><li>sink（连接器）的类型和属性</li></ul><ol start="3"><li>启动</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>flume-ng agent <span class="token parameter variable">--conf</span> <span class="token variable">$FLUME_HOME</span>/conf --conf-file <span class="token variable">$FLUME_HOME</span>/conf/flume.conf <span class="token parameter variable">--name</span> <span class="token operator">&lt;</span>agent-name<span class="token operator">&gt;</span> <span class="token parameter variable">-Dflume.root.logger</span><span class="token operator">=</span>INFO,console
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="fluentd" tabindex="-1"><a class="header-anchor" href="#fluentd" aria-hidden="true">#</a> Fluentd</h3><hr><ol><li>安装 CentOS默认情况下没有预安装Ruby，所以需要先安装Ruby。运行以下命令来安装Ruby</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> ruby

<span class="token comment">## 安装Fluentd</span>
<span class="token function">sudo</span> gem <span class="token function">install</span> fluentd

<span class="token comment">## 创建修改配置文件</span>
<span class="token function">vim</span> /etc/fluentd.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>配置文件</li></ol><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">&gt;</span></span>
  @type http
  port 8080
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">**</span><span class="token punctuation">&gt;</span></span>
  @type file
  path /path/to/log/file.log
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面描述的配置中，Fluentd通过HTTP输入插件监听本地主机的8080端口，接收数据。然后，通过文件输入插件将数据写入指定的日志文件。</p><ol start="3"><li>启动</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>fluentd <span class="token parameter variable">-c</span> /etc/fluentd.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="td-agent" tabindex="-1"><a class="header-anchor" href="#td-agent" aria-hidden="true">#</a> td-agent</h3><hr><p>td-agent是Fluentd的稳定发行版本，它的出现是因为Fluentd不易于安装。本质上td-agent和Fluentd是一个东西。</p><p>td-agent是做什么用的 简单来说就是收集日志用的，把服务器上的日志收集起来，发送到指定的地方，统一管理分析，功能比较强大</p><ol><li>安装启动</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># td-agent 4</span>
$ <span class="token function">curl</span> <span class="token parameter variable">-L</span> https://toolbelt.treasuredata.com/sh/install-redhat-td-agent4.sh <span class="token operator">|</span> <span class="token function">sh</span>

<span class="token comment"># td-agent 3</span>
$ <span class="token function">curl</span> <span class="token parameter variable">-L</span> https://toolbelt.treasuredata.com/sh/install-redhat-td-agent3.sh <span class="token operator">|</span> <span class="token function">sh</span>

<span class="token comment">#查看是否安装</span>
<span class="token function">rpm</span> -qa<span class="token operator">|</span><span class="token function">grep</span> td-agent
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>启动</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start td-agent

$ <span class="token function">sudo</span> systemctl start td-agent.service
$ <span class="token function">sudo</span> systemctl status td-agent.service
● td-agent.service - td-agent: Fluentd based data collector <span class="token keyword">for</span> Treasure Data
   Loaded: loaded <span class="token punctuation">(</span>/usr/lib/systemd/system/td-agent.service<span class="token punctuation">;</span> enabled<span class="token punctuation">;</span> vendor preset: disabled<span class="token punctuation">)</span>
   Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Tue <span class="token number">2022</span>-09-27 06:14:36 UTC<span class="token punctuation">;</span> 1s ago
     Docs: https://docs.treasuredata.com/display/public/PD/About+Treasure+Data%27s+Server-Side+Agent
  Process: <span class="token number">33953</span> <span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/opt/td-agent/bin/fluentd <span class="token parameter variable">--log</span> <span class="token variable">$TD_AGENT_LOG_FILE</span> <span class="token parameter variable">--daemon</span> /var/run/td-agent/td-agent.pid <span class="token variable">$TD_AGENT_OPTIONS</span> <span class="token punctuation">(</span>code<span class="token operator">=</span>exited, <span class="token assign-left variable">status</span><span class="token operator">=</span><span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span>
 Main PID: <span class="token number">33959</span> <span class="token punctuation">(</span>fluentd<span class="token punctuation">)</span>
    Tasks: <span class="token number">10</span> <span class="token punctuation">(</span>limit: <span class="token number">4958</span><span class="token punctuation">)</span>
   Memory: <span class="token number">78</span>.1M
   CGroup: /system.slice/td-agent.service
           ├─33959 /opt/td-agent/bin/ruby /opt/td-agent/bin/fluentd <span class="token parameter variable">--log</span> /var/log/td-agent/td-agent.log <span class="token parameter variable">--daemon</span> /var/run/td-agent/td-agent.pid
           └─33962 /opt/td-agent/bin/ruby -Eascii-8bit:ascii-8bit /opt/td-agent/bin/fluentd <span class="token parameter variable">--log</span> /var/log/td-agent/td-agent.log <span class="token parameter variable">--daemon</span> /var/run/td-agent/td<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>To customize systemd behavior, put your td-agent.service in /etc/systemd/system. NOTE: In td-agent 4, the path is different i.e. /opt/td-agent/bin in</p></div><ol start="3"><li>配置文件 默认配置文件路径为<code>/etc/td-agent/td-agent.conf</code></li></ol><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">&gt;</span></span>
  @type http
  port 8080
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">**</span><span class="token punctuation">&gt;</span></span>
  @type file
  path /path/to/log/file.log
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">结论</p><p>综合对比可以使用Fluentd的稳定发行版本td-agent</p></div>`,33);function b(k,h){const l=t("font"),i=t("ExternalLinkIcon");return d(),p("div",null,[u,a("p",null,[n("也可以："),s(l,{color:"red"},{default:r(()=>[n("从Elasticsearch官方网站下载Logstash的压缩包，解压到指定目录即可。")]),_:1})]),v,a("p",null,[n('在上记配置中，Filebeat通过HTTP输入数据从" '),a("a",m,[n("http://localhost:8080"),s(i)]),n('"路径中读取，并通过文件输入数据写入指定的日志文件。')]),g])}const x=c(o,[["render",b],["__file","log-collect.html.vue"]]);export{x as default};
