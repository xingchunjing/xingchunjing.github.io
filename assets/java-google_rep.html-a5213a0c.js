import{_ as p,X as l,Y as i,Z as e,$ as t,a0 as n,a1 as c,a2 as a,E as o}from"./framework-f01f539c.js";const d={},u=e("h1",{id:"google内购-补充",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#google内购-补充","aria-hidden":"true"},"#"),t(" google内购(补充)")],-1),h=e("p",null,"这篇是作为google支付的补充篇，主要是倾向纯curl请求完成订单校验",-1),g=e("h2",{id:"_1-获取授权",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-获取授权","aria-hidden":"true"},"#"),t(" 1. 获取授权")],-1),k=e("p",null,"首先，构建url，直接在浏览器访问，然后登陆Google账号并授权允许。 之后就会携带参数跳转到指定的重定向URI",-1),_={class:"hint-container tip"},v=e("p",{class:"hint-container-title"},"提示",-1),m={href:"https://developers.google.com/android-publisher/authorization#generating_a_refresh_token",target:"_blank",rel:"noopener noreferrer"},b=a(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
* client_id：OAuth2 客户端凭证中client_id
* redirect_uri：OAuth2 客户端凭证配置中的已获授权的重定向uri
* scope：授权范围，我们要获取内购需要的授权，所以请求范围为 https://www.googleapis.com/auth/androidpublisher
* 注意，access_type=offline 是必须的，如果不带这个，将不会生成出 refresh_token
*/</span>
<span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>accounts<span class="token punctuation">.</span>google<span class="token punctuation">.</span>com<span class="token operator">/</span>o<span class="token operator">/</span>oauth2<span class="token operator">/</span>auth<span class="token operator">?</span>client_id<span class="token operator">=</span><span class="token punctuation">{</span>你的OAuth client id<span class="token punctuation">}</span><span class="token operator">&amp;</span>scope<span class="token operator">=</span><span class="token punctuation">{</span>授权范围<span class="token punctuation">}</span><span class="token operator">&amp;</span>response_type<span class="token operator">=</span>code<span class="token operator">&amp;</span>redirect_uri<span class="token operator">=</span><span class="token punctuation">{</span>重定向<span class="token constant">URI</span><span class="token punctuation">}</span><span class="token operator">&amp;</span>access_type<span class="token operator">=</span>offline

<span class="token comment">//例(部分参数做了修改)：</span>
<span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>accounts<span class="token punctuation">.</span>google<span class="token punctuation">.</span>com<span class="token operator">/</span>o<span class="token operator">/</span>oauth2<span class="token operator">/</span>auth<span class="token operator">?</span>client_id<span class="token operator">=</span><span class="token number">123428073232</span><span class="token operator">-</span>6tpvle71q5hp5j76bqeepb9b9fsfao4g<span class="token punctuation">.</span>apps<span class="token punctuation">.</span>googleusercontent<span class="token punctuation">.</span>com<span class="token operator">&amp;</span>redirect_uri<span class="token operator">=</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8092</span><span class="token operator">/</span>jingxc<span class="token operator">/</span>google<span class="token operator">/</span>google<span class="token operator">-</span>callback<span class="token operator">&amp;</span>response_type<span class="token operator">=</span>code<span class="token operator">&amp;</span>scope<span class="token operator">=</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>googleapis<span class="token punctuation">.</span>com<span class="token operator">/</span>auth<span class="token operator">/</span>androidpublisher<span class="token operator">&amp;</span>access_type<span class="token operator">=</span>offline
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-获取refresh-token" tabindex="-1"><a class="header-anchor" href="#_2-获取refresh-token" aria-hidden="true">#</a> 2. 获取refresh_token</h2><p>授权完成后，谷歌会携带参数跳转到你的重定向URI中。其中包含了最重要 code 字段，拿这个 code 去进行下一步操作，获取refresh_token</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>4/0AbUR2VPc5QvEdi30R7WYMVbepuyQT8PrFKHU5UH6Y1yYtxc1cL5XLEuJD8N1eE2brK58eg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),f={href:"https://accounts.google.com/o/oauth2/token",target:"_blank",rel:"noopener noreferrer"},x=a(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>grant_type=authorization_code
code=&lt;the code from the previous step&gt;
client_id=&lt;the client ID token created in the APIs Console&gt;
client_secret=&lt;the client secret corresponding to the client ID&gt;
redirect_uri=&lt;the URI registered with the client ID&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>注意请求为form-data请求</p></div><p>成功的响应将包含您的 JSON 格式的令牌：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;access_token&quot;</span><span class="token operator">:</span><span class="token string">&quot;ya29.a0AWY7Cknto5y2nSrPU8bMD4H1JPDJ6r2-6toRvYQLHF9JKKvxNb1VCZDQSM6t6DwMt51S2yVhtaiMQiFliA5aR6HymRvdhnXEmIQIcWs1QyO5Pe0gJQY4VYAsrnHnbavF1qXxRpG40EsfBoaluxmB3tKhJphdaCgYKASYSARASFQG1tDrpcDPi8xnDn5bI6xx_C1EWSw0163&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;refresh_token&quot;</span><span class="token operator">:</span><span class="token string">&quot;1//06kdNYvxl0G9mCgYIARAAGAYSNwF-L9Ir9HcJyLgstKln0_SNwt2eGuYoggey3NfDdbRvpeKpF2GCqFbuidysU9bPOe80_gztBeU&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;scope&quot;</span><span class="token operator">:</span><span class="token string">&quot;https://www.googleapis.com/auth/androidpublisher&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;token_type&quot;</span><span class="token operator">:</span><span class="token string">&quot;Bearer&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;expires_in&quot;</span><span class="token operator">:</span><span class="token number">3599</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-使用刷新令牌" tabindex="-1"><a class="header-anchor" href="#_3-使用刷新令牌" aria-hidden="true">#</a> 3. 使用刷新令牌</h2>`,5),y={href:"https://accounts.google.com/o/oauth2/token",target:"_blank",rel:"noopener noreferrer"},q=a(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>grant_type=refresh_token
client_id=&lt;the client ID token created in the APIs Console&gt;
client_secret=&lt;the client secret corresponding to the client ID&gt;
refresh_token=&lt;the refresh token from the previous step&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>成功的响应将包含另一个访问令牌：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;access_token&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;ya29.AHES3ZQ_MbZCwac9TBWIbjW5ilJkXvLTeSl530Na2&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;token_type&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;Bearer&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;expires_in&quot;</span> <span class="token operator">:</span> <span class="token number">3600</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因此，刷新令牌可允许网络服务器继续访问该 API，而无需有效登录 Google 帐号。</p><h2 id="_4-使用访问令牌" tabindex="-1"><a class="header-anchor" href="#_4-使用访问令牌" aria-hidden="true">#</a> 4. 使用访问令牌</h2><p>服务器可以通过在请求的 Authorization 标头中传递访问令牌来调用该 API：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Authorization: Bearer oauth2-token
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_5-获取用户支付订单信息" tabindex="-1"><a class="header-anchor" href="#_5-获取用户支付订单信息" aria-hidden="true">#</a> 5. 获取用户支付订单信息</h2>`,8),w={class:"hint-container tip"},I=e("p",{class:"hint-container-title"},"提示",-1),S={href:"https://developers.google.com/android-publisher/api-ref/rest/v3/purchases.products/get?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"},j=e("p",null,"access_token也可以放在url上，最好是放在请求头里",-1),A=a('<p>路径参数：</p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">packageName</td><td style="text-align:left;">string</td><td style="text-align:left;">销售应用内商品的应用的软件包名称（例如“com.some.thing”）。</td></tr><tr><td style="text-align:left;">productId</td><td style="text-align:left;">string</td><td style="text-align:left;">应用内商品 SKU（例如“com.some.thing.inapp1”）。</td></tr><tr><td style="text-align:left;">token</td><td style="text-align:left;">string</td><td style="text-align:left;">购买应用内商品时向用户设备提供的令牌。</td></tr></tbody></table><p>当用户在 APP 中完成支付后，前端可以从谷歌手上拿到一个token ，该 token 上报给后端服务可以用来查询订单状态，并进行订单消费处理。 具体的请求说明可以参考文档，这里给出一个完整的例子：</p>',3),P={href:"https://androidpublisher.googleapis.com/androidpublisher/v3/applications/%7BpackageName%7D/purchases/products/%7BproductId%7D/tokens/%7Btoken%7D",target:"_blank",rel:"noopener noreferrer"},D={class:"hint-container info"},N=e("p",{class:"hint-container-title"},"相关信息",-1),B={href:"https://developers.google.com/android-publisher/api-ref/purchases/products#resource-representations",target:"_blank",rel:"noopener noreferrer"},R=e("p",null,"purchaseState : 仅为 0 时，为已支付状态 acknowledgementState : 是否已确认。 确认操作可以由后端接口处理，下一步会介绍到",-1),E=e("p",null,"consumptionState : 是否已核销，商品核销只能由安卓处理，务必与安卓沟通好，确认 acknowledgementState 为 1 的时候才进行核销处理。 如果一次性商品不及时进行核销，用户无法操作第二次购买。",-1),Y=e("p",null,"developerPayload : 载荷用于下一步的确认操作，请妥善保管。",-1),C=e("p",null,"purchaseType : 该字段有三个值，非必传字段，具体可以看文档。 比较重要的是为0时是沙箱（超级账号）支付，用户实际上是没有付款的。",-1),L=e("p",null,"orderId : 谷歌订单号，必须妥善保管",-1),U=e("h2",{id:"_6-确认订单",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_6-确认订单","aria-hidden":"true"},"#"),t(" 6. 确认订单")],-1),T=e("p",null,"上一步中拿到的 developerPayload , 可以用于确认订单。一个订单只能确认一次，确认之后无法再次操作。 可以作为服务端确认凭证。",-1),G=e("p",null,"例如，我们有一个游戏装备商品，用户支付后，安卓上报token ，后端确认token ，记录好订单信息、做完业务处理之后处理确认订单，安卓再次跟谷歌确认订单是否为已确认（即acknowledgementState=1），然后安卓做装备发放处理并核销订单（即consumptionState=1），完成一次消费。",-1),K={class:"hint-container tip"},Q=e("p",{class:"hint-container-title"},"提示",-1),H={href:"https://developers.google.com/android-publisher/api-ref/purchases/products/acknowledge",target:"_blank",rel:"noopener noreferrer"},J=e("p",null,"access_token也可以放在url上，最好是放在请求头里",-1),O=e("p",null,"HTTP POST",-1),V={href:"https://androidpublisher.googleapis.com/androidpublisher/v3/applications/%7BpackageName%7D/purchases/products/%7BproductId%7D/tokens/%7Btoken%7D:acknowledge",target:"_blank",rel:"noopener noreferrer"},z=a(`<p>路径参数：</p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">packageName</td><td style="text-align:left;">string</td><td style="text-align:left;">销售应用内商品的应用的软件包名称（例如“com.some.thing”）。</td></tr><tr><td style="text-align:left;">productId</td><td style="text-align:left;">string</td><td style="text-align:left;">应用内商品 SKU（例如“com.some.thing.inapp1”）。</td></tr><tr><td style="text-align:left;">token</td><td style="text-align:left;">string</td><td style="text-align:left;">购买应用内商品时向用户设备提供的令牌。</td></tr></tbody></table><p>请求正文 请求正文中包含结构如下的数据：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;developerPayload&quot;</span><span class="token operator">:</span> string<span class="token comment">//附加到购买交易的载荷,上一步中拿到的developerPayload</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>响应正文 如果成功，则响应正文为空。</p><h2 id="_7-订单退款" tabindex="-1"><a class="header-anchor" href="#_7-订单退款" aria-hidden="true">#</a> 7. 订单退款</h2><p>通过配置webhook接收退款信息，详情请参阅webhook配置</p>`,7),F=e("li",null,[e("strong",null,"本文作者："),t(" 景兴春")],-1),M=e("strong",null,"本文链接：",-1),W={href:"https://xingchunjing.github.io/back/payment/java-google_rep.html",target:"_blank",rel:"noopener noreferrer"},X=e("strong",null,"版权声明：",-1),Z={href:"https://www.apache.org/licenses/LICENSE-2.0.html",target:"_blank",rel:"noopener noreferrer"};function $(ee,te){const s=o("ExternalLinkIcon"),r=o("RouterLink");return l(),i("div",null,[u,h,g,k,e("div",_,[v,e("p",null,[t("参考文档： "),e("a",m,[t("https://developers.google.com/android-publisher/authorization#generating_a_refresh_token"),n(s)])])]),b,e("p",null,[t("将该代码替换为访问权限和刷新令牌组合，为此，您需要向 "),e("a",f,[t("https://accounts.google.com/o/oauth2/token"),n(s)]),t(" 发送 POST 请求，并设置以下字段：")]),x,e("p",null,[t("每个访问令牌仅在短时间内有效。当前访问令牌过期后，服务器需要使用刷新令牌来获取新的访问令牌。为此，请向 "),e("a",y,[t("https://accounts.google.com/o/oauth2/token"),n(s)]),t(" 发送 POST 请求，并设置以下字段：")]),q,e("div",w,[I,e("p",null,[t("参考文档："),e("a",S,[t("https://developers.google.com/android-publisher/api-ref/rest/v3/purchases.products/get?hl=zh-cn"),n(s)])]),j]),A,e("p",null,[t("GET "),e("a",P,[t("https://androidpublisher.googleapis.com/androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}"),n(s)])]),e("div",D,[N,e("p",null,[t("请求成功后，在 json respond 中，获取到订单信息，具体内容说明可以查看文档： "),e("a",B,[t("https://developers.google.com/android-publisher/api-ref/purchases/products#resource-representations"),n(s)]),t(" 其中有以下几个比较重要：")]),R,E,Y,C,L]),U,T,G,e("div",K,[Q,e("p",null,[t("接口文档 ： "),e("a",H,[t("https://developers.google.com/android-publisher/api-ref/purchases/products/acknowledge"),n(s)])]),J]),O,e("p",null,[e("a",V,[t("https://androidpublisher.googleapis.com/androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}:acknowledge"),n(s)])]),z,e("p",null,[n(r,{to:"/back/payment/java-google.html#6-webhook"},{default:c(()=>[t("查看详情")]),_:1})]),e("ul",null,[F,e("li",null,[M,t(),e("a",W,[t("https://xingchunjing.github.io/back/payment/java-google_rep.html"),n(s)])]),e("li",null,[X,t(" 本博客所有文章除特别声明外，均采用 "),e("a",Z,[t("Apache License 2.0"),n(s)]),t(" 许可协议。转载请注明出处！")])])])}const se=p(d,[["render",$],["__file","java-google_rep.html.vue"]]);export{se as default};
