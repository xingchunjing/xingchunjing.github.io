const t=JSON.parse('{"key":"v-e759c858","path":"/knowledge/hashmap01.html","title":"HashMap-02","lang":"zh-CN","frontmatter":{"icon":"map","date":"2023-08-28T00:00:00.000Z","category":["java","后端"],"tag":["HashMap","java","后端"],"star":true,"description":"HashMap-02 1. 构造器 HashMap在创建对象时，可的调用构造器有三种，无参构造器(常用)，初始化容量大小，初始化容量和加载因子 初始化的时候， 默认容量为16，static final int DEFAULT_INITIAL_CAPACITY = 1 &lt;&lt; 4; // aka 16 默认最大容量为1&lt;&lt;30(高位符号位)， static final int MAXIMUM_CAPACITY = 1 &lt;&lt; 30; 加载因子，static final float DEFAULT_LOAD_FACTOR = 0.75f;","head":[["meta",{"property":"og:url","content":"https://gitee.com/jing-xingchun/knowledge/hashmap01.html"}],["meta",{"property":"og:site_name","content":"Jingxc"}],["meta",{"property":"og:title","content":"HashMap-02"}],["meta",{"property":"og:description","content":"HashMap-02 1. 构造器 HashMap在创建对象时，可的调用构造器有三种，无参构造器(常用)，初始化容量大小，初始化容量和加载因子 初始化的时候， 默认容量为16，static final int DEFAULT_INITIAL_CAPACITY = 1 &lt;&lt; 4; // aka 16 默认最大容量为1&lt;&lt;30(高位符号位)， static final int MAXIMUM_CAPACITY = 1 &lt;&lt; 30; 加载因子，static final float DEFAULT_LOAD_FACTOR = 0.75f;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-29T07:58:31.000Z"}],["meta",{"property":"article:author","content":"Jingxc"}],["meta",{"property":"article:tag","content":"HashMap"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"后端"}],["meta",{"property":"article:published_time","content":"2023-08-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-29T07:58:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HashMap-02\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-28T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-29T07:58:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jingxc\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"1. 构造器","slug":"_1-构造器","link":"#_1-构造器","children":[]},{"level":2,"title":"2. put方法","slug":"_2-put方法","link":"#_2-put方法","children":[{"level":3,"title":"2.1 hash算法","slug":"_2-1-hash算法","link":"#_2-1-hash算法","children":[]},{"level":3,"title":"2.2 第一次添加键值对","slug":"_2-2-第一次添加键值对","link":"#_2-2-第一次添加键值对","children":[]},{"level":3,"title":"2.3 第二次添加键值对","slug":"_2-3-第二次添加键值对","link":"#_2-3-第二次添加键值对","children":[]},{"level":3,"title":"2.4 多次添加键值对(键已存在)","slug":"_2-4-多次添加键值对-键已存在","link":"#_2-4-多次添加键值对-键已存在","children":[]},{"level":3,"title":"2.5 多次添加键值对(链表)","slug":"_2-5-多次添加键值对-链表","link":"#_2-5-多次添加键值对-链表","children":[]},{"level":3,"title":"2.6 多次添加键值对(树)","slug":"_2-6-多次添加键值对-树","link":"#_2-6-多次添加键值对-树","children":[]},{"level":3,"title":"2.7 扩容或者树的转换","slug":"_2-7-扩容或者树的转换","link":"#_2-7-扩容或者树的转换","children":[]}]},{"level":2,"title":"3. 线程不安全","slug":"_3-线程不安全","link":"#_3-线程不安全","children":[]}],"git":{"createdTime":1693273488000,"updatedTime":1693295911000,"contributors":[{"name":"Jingxc","email":"2584982513@qq.com","commits":2}]},"readingTime":{"minutes":6.08,"words":1824},"filePathRelative":"knowledge/hashmap01.md","localizedDate":"2023年8月28日","excerpt":"<h1> HashMap-02</h1>\\n<h2> 1. 构造器</h2>\\n<p>HashMap在创建对象时，可的调用构造器有三种，无参构造器(常用)，初始化容量大小，初始化容量和加载因子</p>\\n<p>初始化的时候，</p>\\n<ul>\\n<li>默认容量为16，static final int DEFAULT_INITIAL_CAPACITY = 1 &lt;&lt; 4; // aka 16</li>\\n<li>默认最大容量为1&lt;&lt;30(高位符号位)，    static final int MAXIMUM_CAPACITY = 1 &lt;&lt; 30;</li>\\n<li>加载因子，static final float DEFAULT_LOAD_FACTOR = 0.75f;</li>\\n</ul>","autoDesc":true}');export{t as data};
