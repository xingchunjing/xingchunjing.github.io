const n=JSON.parse('{"key":"v-d2c69968","path":"/knowledge/ConcurrentHashMap.html","title":"ConcurrentHashMap","lang":"zh-CN","frontmatter":{"icon":"any","date":"2023-08-29T00:00:00.000Z","category":["java","后端"],"tag":["ConcurrentHashMap","java","后端"],"star":true,"description":"ConcurrentHashMap 1. 构造器 ConcurrentHashMap的构造器和HashMap的构造器基本相同 2. put方法 ConcurrentHashMap键或者值为空会抛出空指针异常，put方法开始先求取hash final V putVal(K key, V value, boolean onlyIfAbsent) { if (key == null || value == null) throw new NullPointerException(); int hash = spread(key.hashCode()); ... } static final int spread(int h) { return (h ^ (h &gt;&gt;&gt; 16)) &amp; HASH_BITS; }","head":[["meta",{"property":"og:url","content":"https://gitee.com/jing-xingchun/knowledge/ConcurrentHashMap.html"}],["meta",{"property":"og:site_name","content":"Jingxc"}],["meta",{"property":"og:title","content":"ConcurrentHashMap"}],["meta",{"property":"og:description","content":"ConcurrentHashMap 1. 构造器 ConcurrentHashMap的构造器和HashMap的构造器基本相同 2. put方法 ConcurrentHashMap键或者值为空会抛出空指针异常，put方法开始先求取hash final V putVal(K key, V value, boolean onlyIfAbsent) { if (key == null || value == null) throw new NullPointerException(); int hash = spread(key.hashCode()); ... } static final int spread(int h) { return (h ^ (h &gt;&gt;&gt; 16)) &amp; HASH_BITS; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-30T10:24:17.000Z"}],["meta",{"property":"article:author","content":"Jingxc"}],["meta",{"property":"article:tag","content":"ConcurrentHashMap"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"后端"}],["meta",{"property":"article:published_time","content":"2023-08-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-30T10:24:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ConcurrentHashMap\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-29T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-30T10:24:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jingxc\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"1. 构造器","slug":"_1-构造器","link":"#_1-构造器","children":[]},{"level":2,"title":"2. put方法","slug":"_2-put方法","link":"#_2-put方法","children":[{"level":3,"title":"2.2 第一次添加键值对","slug":"_2-2-第一次添加键值对","link":"#_2-2-第一次添加键值对","children":[]},{"level":3,"title":"2.3 第二次添加键值对","slug":"_2-3-第二次添加键值对","link":"#_2-3-第二次添加键值对","children":[]},{"level":3,"title":"2.3 多次添加键值对","slug":"_2-3-多次添加键值对","link":"#_2-3-多次添加键值对","children":[]}]}],"git":{"createdTime":1693391057000,"updatedTime":1693391057000,"contributors":[{"name":"Jingxc","email":"2584982513@qq.com","commits":1}]},"readingTime":{"minutes":8.1,"words":2430},"filePathRelative":"knowledge/ConcurrentHashMap.md","localizedDate":"2023年8月29日","excerpt":"<h1> ConcurrentHashMap</h1>\\n<h2> 1. 构造器</h2>\\n<p>ConcurrentHashMap的构造器和HashMap的构造器基本相同</p>\\n<h2> 2. put方法</h2>\\n<p>ConcurrentHashMap键或者值为空会抛出空指针异常，put方法开始先求取hash</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">final</span> <span class=\\"token class-name\\">V</span> <span class=\\"token function\\">putVal</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">K</span> key<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">V</span> value<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">boolean</span> onlyIfAbsent<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>key <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">||</span> value <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throw</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">NullPointerException</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">int</span> hash <span class=\\"token operator\\">=</span> <span class=\\"token function\\">spread</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">hashCode</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">spread</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> h<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span>h <span class=\\"token operator\\">^</span> <span class=\\"token punctuation\\">(</span>h <span class=\\"token operator\\">&gt;&gt;&gt;</span> <span class=\\"token number\\">16</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;</span> <span class=\\"token constant\\">HASH_BITS</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
