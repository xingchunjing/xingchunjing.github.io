import{_ as o,X as e,Y as c,Z as n,$ as s,a0 as t,a4 as p,E as l}from"./framework-a5b3b151.js";const u="/assets/images/xsolla-pay02.jpeg",i="/assets/images/xsolla-pay01.jpeg",k="/assets/images/xsolla-pay03.jpeg",r="/assets/images/xsolla-pay04.jpeg",d={},m=n("h1",{id:"xsolla支付",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#xsolla支付","aria-hidden":"true"},"#"),s(" xsolla支付")],-1),v=n("p",null,[n("strong",null,"xsolla: 您已尽心尽力开发出令人惊叹、独一无二的游戏。作为您的合作伙伴，帮助您将成果与世界共享是我们的使命。")],-1),g=n("strong",null,"作为开发者在集成xsolla支付接口之前，首先要有一系列的准备，xsolla商家账号，接入流程参考官方文档",-1),h={href:"https://developers.xsolla.com/zh/doc/pay-station/integration-guide/get-started/",target:"_blank",rel:"noopener noreferrer"},b=n("h2",{id:"_1-注册xsolla商家账号",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-注册xsolla商家账号","aria-hidden":"true"},"#"),s(" 1. 注册xsolla商家账号")],-1),_={href:"https://publisher.xsolla.com/",target:"_blank",rel:"noopener noreferrer"},f=n("li",null,"填写公司和创建项目，用于生成商户id",-1),q=n("div",{class:"hint-container warning"},[n("p",{class:"hint-container-title"},"注意"),n("p",null,"自己在这里遇到一个坑，在创建账号时创建的项目不是active的我也不清楚为啥，导致后面的请求都不行，后来联系了平台人员，我把项目删了重新新建一个，刚建完就是active的，就很奇妙")],-1),x=n("p",null,"官方的人员很热情，回复得也很快很有耐心，直接点击下面的在线聊天就能沟通，点赞，下面是部分回复",-1),I={class:"hint-container info"},y=p(`<p class="hint-container-title">相关信息</p><p>我：你好，我是开发人员，我想接入咱们的支付功能，在获取用户令牌时返回</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token string">&quot;message&quot;</span><span class="token operator">:</span> &quot;<span class="token class-name">Project</span> is not <span class="token class-name"><span class="token namespace">active<span class="token punctuation">.</span></span> Please</span> make sure you have successfully passed all tests
<span class="token operator">&lt;</span>a href<span class="token operator">=</span>\\&quot;https<span class="token operator">:</span>\\<span class="token operator">/</span>\\<span class="token operator">/</span>publisher<span class="token punctuation">.</span>xsolla<span class="token punctuation">.</span>com\\<span class="token operator">/</span><span class="token number">403694</span>\\<span class="token operator">/</span>projects\\<span class="token operator">/</span><span class="token number">217604</span>\\&quot; target<span class="token operator">=</span>\\&quot;_blank\\&quot;<span class="token operator">&gt;</span>here<span class="token operator">&lt;</span>\\<span class="token operator">/</span>a<span class="token operator">&gt;</span> and activate your project<span class="token punctuation">.</span>&quot;<span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这是因为什么？</p><p>Simon：</p>`,5),w={href:"https://publisher.xsolla.com/403694/projects/217604/edit/webhooks%E6%82%A8%E8%BF%98%E9%9C%80%E8%A6%81%E8%AE%BE%E7%BD%AE",target:"_blank",rel:"noopener noreferrer"},S=n("p",null,"我：我是按照咱们官方文档步骤来的，webhook这一块下面的商店/支付/订阅都需要填写才能激活项目吗？",-1),j=n("p",null,"Simon",-1),O={href:"https://developers.xsolla.com/solutions/payments/",target:"_blank",rel:"noopener noreferrer"},M=n("p",null,"我：按照上面操作了一顿还是不行，后来干脆把创建账号时创建的项目删了，再按照上面创建一个，直接变成active的了，很奇妙",-1),U=n("p",null,"Simon： 很高兴分享指向我们最相关解决方案的链接。 您还可以使用我发送给您的链接来集成它并启用您的项目。",-1),E=n("p",null,"您还可以查看最适合您的项目的内容。",-1),R={href:"https://xsolla.com/products/paystation",target:"_blank",rel:"noopener noreferrer"},C={href:"https://xsolla.com/products/in-game-store",target:"_blank",rel:"noopener noreferrer"},T={href:"https://xsolla.com/solution/web-shop-for-mobile-games?cardId=290",target:"_blank",rel:"noopener noreferrer"},A={href:"https://xsolla.com/solutions/online-game-sales?cardId=166",target:"_blank",rel:"noopener noreferrer"},B={href:"https://xsolla.com/products/digital-distribution-hub",target:"_blank",rel:"noopener noreferrer"},z={href:"https://xsolla.com/products/subscriptions",target:"_blank",rel:"noopener noreferrer"},P=n("p",null,"Simon：",-1),H=n("p",null,"您可以在发布者帐户中选择产品，单击感兴趣的产品选项卡中的文档。还有一个完整的集成指南，其中包括启用您的项目和产品",-1),N=p('<h3 id="_1-1-商户id" tabindex="-1"><a class="header-anchor" href="#_1-1-商户id" aria-hidden="true">#</a> 1.1 商户ID：</h3><hr><ul><li>在 <strong>项目设置 &gt; Webhooks</strong> 部分。 记录商户id，项目id，api密钥备用（webhook）</li><li>在 <strong>公司设置 &gt; 公司</strong> 部分。</li></ul><h3 id="_1-2-api密钥" tabindex="-1"><a class="header-anchor" href="#_1-2-api密钥" aria-hidden="true">#</a> 1.2 API密钥</h3><hr><p>仅在创建它时在发布商帐户中显示一次，必须存储在己侧。可以在以下部分中创建新的密钥：</p><ul><li>公司设置 &gt; API密钥</li><li>项目设置 &gt; API密钥</li></ul><h2 id="_2-获取用户令牌" tabindex="-1"><a class="header-anchor" href="#_2-获取用户令牌" aria-hidden="true">#</a> 2. 获取用户令牌</h2>',8),D={class:"hint-container tip"},F=n("p",{class:"hint-container-title"},"提示",-1),K={href:"https://api.xsolla.com/merchant/v2/merchants/%7BxsollaUserId%7D/token",target:"_blank",rel:"noopener noreferrer"},L=n("p",null,"xsollaUserId: 用户创建的商户id",-1),W=n("p",null,"封装请求头信息",-1),J={href:"https://en.wikipedia.org/wiki/Basic_access_authentication",target:"_blank",rel:"noopener noreferrer"},V=n("strong",null,"商户ID: API密钥",-1),X={href:"https://publisher.xsolla.com/",target:"_blank",rel:"noopener noreferrer"},G=p(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//授权信息</span>
<span class="token class-name">String</span> xsollaUserId <span class="token operator">=</span> constantInfo<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//商户id</span>
<span class="token class-name">String</span> appId <span class="token operator">=</span> constantInfo<span class="token punctuation">.</span><span class="token function">getAppId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//项目id</span>
<span class="token class-name">String</span> appKey <span class="token operator">=</span> constantInfo<span class="token punctuation">.</span><span class="token function">getAppKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//密钥</span>
<span class="token class-name">String</span> headerBasic <span class="token operator">=</span> <span class="token class-name">OauthSignatureUtil</span><span class="token punctuation">.</span><span class="token function">headerBasic</span><span class="token punctuation">(</span>xsollaUserId<span class="token punctuation">,</span> appKey<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//方法参见java-paypal</span>

<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
headers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">,</span> headerBasic<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于请求提没什么可说的直接按照文档上赋值就可以了</p><p>示例代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@OperationLogger</span>
<span class="token keyword">public</span> <span class="token class-name">ReturnResult</span> <span class="token function">createToken</span><span class="token punctuation">(</span><span class="token class-name">CreateTokenParams</span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token class-name">String</span> userId <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> gameId <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">getGameId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> channelId <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">getChannelId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> email <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> currencyType <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">getCurrencyType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//验证账号是否存在</span>
    <span class="token class-name">UserAccountInfo</span> accountInfo <span class="token operator">=</span> <span class="token class-name">UserAccountInfo</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">userId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    accountInfo <span class="token operator">=</span> userAccountInfoMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>accountInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>accountInfo <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">ReturnResultError</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token class-name">ConstantCommon</span><span class="token punctuation">.</span><span class="token constant">RETURN_CODE_903</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">msg</span><span class="token punctuation">(</span><span class="token string">&quot;账号不存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">String</span> username <span class="token operator">=</span> accountInfo<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//查询渠道配置信息</span>
    <span class="token class-name">ConstantMeInfo</span> constantInfo <span class="token operator">=</span> <span class="token function">getCacheConstantInfo</span><span class="token punctuation">(</span>gameId<span class="token punctuation">,</span> channelId<span class="token punctuation">,</span> <span class="token string">&quot;xsolla&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//授权信息</span>
    <span class="token class-name">String</span> xsollaUserId <span class="token operator">=</span> constantInfo<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//商户id</span>
    <span class="token class-name">String</span> appId <span class="token operator">=</span> constantInfo<span class="token punctuation">.</span><span class="token function">getAppId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//项目id</span>
    <span class="token class-name">String</span> appKey <span class="token operator">=</span> constantInfo<span class="token punctuation">.</span><span class="token function">getAppKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//密钥</span>
    <span class="token class-name">String</span> headerBasic <span class="token operator">=</span> <span class="token class-name">OauthSignatureUtil</span><span class="token punctuation">.</span><span class="token function">headerBasic</span><span class="token punctuation">(</span>xsollaUserId<span class="token punctuation">,</span> appKey<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//方法参见java-paypal</span>

    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    headers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">,</span> headerBasic<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//请求体</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> xsollaParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xsollaParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;settings&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;currency&quot;</span><span class="token punctuation">,</span> currencyType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;language&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;en&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//xsolla支付界面语言。可定制化配置</span>
        <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;project_id&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>appId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xsollaParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> email<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> createToken <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">postByJsonToMap</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.xsolla.com/merchant/v2/merchants/&quot;</span> <span class="token operator">+</span> xsollaUserId <span class="token operator">+</span> <span class="token string">&quot;/token&quot;</span><span class="token punctuation">,</span> headers<span class="token punctuation">,</span> xsollaParams<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>createToken<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">ReturnResultSuccess</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token class-name">ConstantCommon</span><span class="token punctuation">.</span><span class="token constant">RETURN_CODE_200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">msg</span><span class="token punctuation">(</span><span class="token string">&quot;订单创建成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>createToken<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token class-name">ConstantCommon</span><span class="token punctuation">.</span><span class="token constant">RETURN_COUNT_1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就拿到了用户的token信息</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;token&quot;</span><span class="token operator">:</span><span class="token string">&quot;twpuiVlqxd95a0rL2isA7RmTjSD7rzXa_lc_en_bg_FFFFFF_tb_3D46F5&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-使用指定商品创建订单" tabindex="-1"><a class="header-anchor" href="#_3-使用指定商品创建订单" aria-hidden="true">#</a> 3. 使用指定商品创建订单</h2><p>目前使用的是指定商品创建订单，商品信息需要在商户后台提前配置，项目-商店-虚拟商品，配置即可,也可以使用api创建虚拟商品</p>`,8),Q={href:"https://developers.xsolla.com/zh/api/igs-bb/operation/admin-create-virtual-item/",target:"_blank",rel:"noopener noreferrer"},Y=n("figure",null,[n("img",{src:u,alt:"虚拟商品",tabindex:"0",loading:"lazy"}),n("figcaption",null,"虚拟商品")],-1),Z={class:"hint-container tip"},$=n("p",{class:"hint-container-title"},"提示",-1),nn={href:"https://store.xsolla.com/api/v2/project/%7BprojectId%7D/payment/item/%7BproductId%7D",target:"_blank",rel:"noopener noreferrer"},sn=n("p",null,"projectId:项目id，productId：商品id，sku",-1),an=p(`<p>封装请求头信息，用到上步骤获取的用户令牌</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//授权信息</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
headers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bearer &quot;</span> <span class="token operator">+</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>封装用户付款ui</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//配置ui显示</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> ui <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ui<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;desktop&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token comment">//桌面版本的界面设置。</span>
    <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;header&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;close_button&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//是否在支付中心桌面端显示关闭按钮。该按钮将关闭支付中心并将用户重定向到settings.return_url参数中指定的URL。默认为false。</span>
        <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;is_visible&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//页眉在支付UI上是否可见。</span>
        <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;normal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//如何显示页眉。不能：compact（隐藏项目名称和用户ID）或normal（默认）</span>
        <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;visible_logo&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//标题中将显示Logo</span>
        <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;visible_name&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//页眉中是否显示项目名称。</span>
        <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;visible_purchase&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//是否在页眉中显示购买描述(purchase.description.value )</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ui<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mobile&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>
    <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;footer&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;is_visible&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//是否在移动版本的支付UI中隐藏或显示脚注。</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;header&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;close_button&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//是否在支付中心移动端显示关闭按钮。该按钮将关闭支付中心并将用户重定向到settings.return_url参数中指定的URL。默认为false。</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ui<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;size&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;large&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ui<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;theme&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ui<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;version&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mobile&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设备的类型。可以是desktop（默认值）或mobile。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完整的请求体信息</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> xsollaParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
xsollaParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;settings&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>
    <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;ui&quot;</span><span class="token punctuation">,</span> ui<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;return_url&quot;</span><span class="token punctuation">,</span> constantInfo<span class="token punctuation">.</span><span class="token function">getReturnUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;redirect_policy&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">{</span>
            <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;redirect_conditions&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;successful&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//回调触发</span>
<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
xsollaParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;sandbox&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//沙盒环境</span>
xsollaParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;quantity&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
xsollaParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;custom_parameters&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token comment">//项目特定参数。</span>
    <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;character_id&quot;</span><span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>订单创建成功，返回</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;order_id&quot;</span><span class="token operator">:</span><span class="token number">32304580</span><span class="token punctuation">,</span>
    <span class="token property">&quot;token&quot;</span><span class="token operator">:</span><span class="token string">&quot;twpugyGEI56prN2fAzMKu5ynipYwXZqe_lc_cn_bg_FFFFFF_tb_3D46F5&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-支付" tabindex="-1"><a class="header-anchor" href="#_4-支付" aria-hidden="true">#</a> 4. 支付</h2>`,9),tn={class:"hint-container tip"},pn=n("p",{class:"hint-container-title"},"提示",-1),on={href:"https://sandbox-secure.xsolla.com/paystation4/?token=TOKEN",target:"_blank",rel:"noopener noreferrer"},en={href:"https://secure.xsolla.com/paystation4/?token=TOKEN%E3%80%82",target:"_blank",rel:"noopener noreferrer"},cn=p('<figure><img src="'+i+'" alt="支付页面" tabindex="0" loading="lazy"><figcaption>支付页面</figcaption></figure><p>选择paypal支付，可以用paypal沙盒虚拟账号支付，有关paypal账号部分参见java-paypal</p><figure><img src="'+k+'" alt="付款成功" tabindex="0" loading="lazy"><figcaption>付款成功</figcaption></figure><p>在个人商户邮箱就可收到用户的付款信息</p><figure><img src="'+r+'" alt="商家邮箱" tabindex="0" loading="lazy"><figcaption>商家邮箱</figcaption></figure><h3 id="查询订单状态" tabindex="-1"><a class="header-anchor" href="#查询订单状态" aria-hidden="true">#</a> 查询订单状态</h3><hr><p>可通过查询订单状态，确认是否完成付款</p><h2 id="_5-通过发布商帐户进行管理" tabindex="-1"><a class="header-anchor" href="#_5-通过发布商帐户进行管理" aria-hidden="true">#</a> 5. 通过发布商帐户进行管理</h2>',9),ln={href:"https://publisher.xsolla.com/",target:"_blank",rel:"noopener noreferrer"},un=p('<ul><li>在 <strong>会计 &gt; 交易登记表</strong> 中查看交易历史记录、统计数据及上传交易数据。（ 需要选择测试交易就能看见刚才测试的支付订单 ）</li><li>在 <strong>会计 &gt; 付款</strong> 中核对收入。</li><li>在 <strong>会计 &gt; 报告</strong> 导出用于法律合规事宜的报告。</li></ul><h2 id="_6-退款" tabindex="-1"><a class="header-anchor" href="#_6-退款" aria-hidden="true">#</a> 6. 退款</h2><p><strong>可以发起部分退款，也可以全额退款，这里只介绍全额退款，详细的文档请参见</strong></p>',3),kn={href:"https://developers.xsolla.com/zh/api/pay-station/operation/request-refund/",target:"_blank",rel:"noopener noreferrer"},rn=n("p",null,"退款需要交易id，交易id",-1),dn=n("ul",null,[n("li",null,"商户：商户后台交易记录能查看到交易id"),n("li",null,"用户：用户在付款后，ui页面有显示（№1163315218）")],-1),mn={class:"hint-container tip"},vn=n("p",{class:"hint-container-title"},"提示",-1),gn={href:"https://api.xsolla.com/merchant/v2/merchants/%7Bmerchant_id%7D/reports/transactions/%7Btransaction_id%25%7D/refund",target:"_blank",rel:"noopener noreferrer"},hn=n("p",null,"merchant_id：商户id",-1),bn=n("p",null,"transaction_id：交易id",-1),_n=p(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@OperationLogger</span>
<span class="token keyword">public</span> <span class="token class-name">ReturnResult</span> <span class="token function">refundOrder</span><span class="token punctuation">(</span><span class="token class-name">RefundOrderParams</span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token class-name">String</span> userId <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> orderId <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> gameId <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">getGameId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> channelId <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">getChannelId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> transcationId <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">getTranscationId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> desc <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">getDesc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//查询订单是否存在</span>
    <span class="token class-name">OrderMeInfo</span> orderMeInfo <span class="token operator">=</span> <span class="token class-name">OrderMeInfo</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">gameId</span><span class="token punctuation">(</span>gameId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">channelId</span><span class="token punctuation">(</span>channelId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orderId</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">userId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">orderStatus</span><span class="token punctuation">(</span><span class="token class-name">ConstantCommon</span><span class="token punctuation">.</span><span class="token constant">ORDER_STATUS_1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    orderMeInfo <span class="token operator">=</span> orderMeInfoMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>orderMeInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>orderMeInfo <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">ReturnResultError</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token class-name">ConstantCommon</span><span class="token punctuation">.</span><span class="token constant">RETURN_CODE_903</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">msg</span><span class="token punctuation">(</span><span class="token string">&quot;订单不存在或者不存在/已退款&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//查询渠道配置信息</span>
    <span class="token class-name">ConstantMeInfo</span> constantInfo <span class="token operator">=</span> <span class="token function">getCacheConstantInfo</span><span class="token punctuation">(</span>gameId<span class="token punctuation">,</span> channelId<span class="token punctuation">,</span> <span class="token string">&quot;xsolla&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//授权信息</span>
    <span class="token class-name">String</span> xsollaUserId <span class="token operator">=</span> constantInfo<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//商户id</span>
    <span class="token class-name">String</span> appKey <span class="token operator">=</span> constantInfo<span class="token punctuation">.</span><span class="token function">getAppKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//密钥</span>
    <span class="token class-name">String</span> headerBasic <span class="token operator">=</span> <span class="token class-name">OauthSignatureUtil</span><span class="token punctuation">.</span><span class="token function">headerBasic</span><span class="token punctuation">(</span>xsollaUserId<span class="token punctuation">,</span> appKey<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    headers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">,</span> headerBasic<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> xsollaParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xsollaParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;description&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;退款理由&quot;</span> <span class="token operator">+</span> desc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    xsollaParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;18712709017@163.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//用户邮箱</span>

    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> refund <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">postByJsonToMap</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.xsolla.com/merchant/v2/merchants/&quot;</span>
            <span class="token operator">+</span> constantInfo<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/reports/transactions/&quot;</span> <span class="token operator">+</span> transcationId <span class="token operator">+</span> <span class="token string">&quot;/refund&quot;</span><span class="token punctuation">,</span> headers<span class="token punctuation">,</span> xsollaParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>refund<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//TODO 更新订单信息</span>
    <span class="token keyword">return</span> <span class="token class-name">ReturnResultSuccess</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token class-name">ConstantCommon</span><span class="token punctuation">.</span><span class="token constant">RETURN_CODE_200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">msg</span><span class="token punctuation">(</span><span class="token string">&quot;退款成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>refund<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token class-name">ConstantCommon</span><span class="token punctuation">.</span><span class="token constant">RETURN_COUNT_1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-设置webhook-重要" tabindex="-1"><a class="header-anchor" href="#_7-设置webhook-重要" aria-hidden="true">#</a> 7. 设置WEBHOOK(重要)</h2><p>如希望接收事件通知（如支付状态变化），请在发布商帐户中设置Webhook：</p>`,3),fn={href:"https://publisher.xsolla.com/",target:"_blank",rel:"noopener noreferrer"},qn=p("<li>在侧边栏中单击 <strong>项目设置</strong> ，然后前往 <strong>Webhooks</strong> 。</li><li>将 <strong>Webhooks</strong> 开关设置为 <strong>开</strong> 。</li><li>指定Webhook URL。</li><li>默认会生成一个用于项目Webhook签名的密钥。如要生成一个新密钥，请单击刷新图标。</li><li>单击 <strong>保存设置</strong> 。</li>",5),xn=n("p",null,"推荐实现以下Webhook：",-1),In={href:"https://developers.xsolla.com/zh/webhooks/operation/user-validation",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://developers.xsolla.com/zh/webhooks/operation/payment",target:"_blank",rel:"noopener noreferrer"},wn={href:"https://developers.xsolla.com/zh/webhooks/operation/successful-order-payment/",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://developers.xsolla.com/zh/webhooks/operation/refund/",target:"_blank",rel:"noopener noreferrer"},jn={href:"https://developers.xsolla.com/zh/webhooks/operation/partial-refund/",target:"_blank",rel:"noopener noreferrer"},On=n("p",null,"要确认已收到Webhook，您的服务器必须作出如下响应：",-1),Mn=n("ul",null,[n("li",null,"不带消息正文的HTTP代码204。"),n("li",null,"描述问题的HTTP代码400（如果指定用户未找到或传入的签名无效）。")],-1),Un=n("p",null,"xsolla的接入到目前就已基本完成",-1),En=n("li",null,[n("strong",null,"本文作者："),s(" 景兴春")],-1),Rn=n("strong",null,"本文链接：",-1),Cn={href:"https://www.jingxc.top/back/payment/java-xsolla.html",target:"_blank",rel:"noopener noreferrer"},Tn=n("strong",null,"版权声明：",-1),An={href:"https://www.apache.org/licenses/LICENSE-2.0.html",target:"_blank",rel:"noopener noreferrer"};function Bn(zn,Pn){const a=l("ExternalLinkIcon");return e(),c("div",null,[m,v,n("p",null,[g,s(),n("a",h,[s("https://developers.xsolla.com/zh/doc/pay-station/integration-guide/get-started/"),t(a)])]),b,n("ul",null,[n("li",null,[s("在浏览器输入 "),n("a",_,[s("https://publisher.xsolla.com/"),t(a)]),s("跳转xsolla注册/登陆界面，点击注册")]),f]),q,x,n("div",I,[y,n("p",null,[n("a",w,[s("https://publisher.xsolla.com/403694/projects/217604/edit/webhooks您还需要设置"),t(a)]),s(" webhook 并粘贴 webhook 的 URL 以激活您的项目。")]),S,j,n("p",null,[n("a",O,[s("https://developers.xsolla.com/solutions/payments/"),t(a)]),s(" 它是付款文档，但您可以在那里看到有关如何设置项目和启用它的所有信息。它还有关于 webhook 的主题。")]),M,U,E,n("p",null,[s("支付 - "),n("a",R,[s("https://xsolla.com/products/paystation"),t(a)])]),n("p",null,[s("游戏内商店 - "),n("a",C,[s("https://xsolla.com/products/in-game-store"),t(a)])]),n("p",null,[s("网上商店 - "),n("a",T,[s("https://xsolla.com/solution/web-shop-for-mobile-games?cardId=290"),t(a)])]),n("p",null,[s("游戏销售 - "),n("a",A,[s("https://xsolla.com/solutions/online-game-sales?cardId=166"),t(a)])]),n("p",null,[s("数字分销中心 - "),n("a",B,[s("https://xsolla.com/products/digital-distribution-hub"),t(a)])]),n("p",null,[s("订阅 - "),n("a",z,[s("https://xsolla.com/products/subscriptions"),t(a)])]),P,H]),N,n("div",D,[F,n("p",null,[s("请求地址： "),n("a",K,[s("https://api.xsolla.com/merchant/v2/merchants/{xsollaUserId}/token"),t(a)])]),L]),W,n("p",null,[s("xsollaAPI使用"),n("a",J,[s("基本认证"),t(a)]),s(" 。所有发送到API的请求必须包含 Authorization: Basic <your_authorization_basic_key> 头，其中 <your_authorization_basic_key> 是按照Base64标准加密的 "),V,s(" 对。请前往 "),n("a",X,[s("发布商帐户"),t(a)]),s(" 找到以下参数：")]),G,n("p",null,[n("a",Q,[s("https://developers.xsolla.com/zh/api/igs-bb/operation/admin-create-virtual-item/"),t(a)])]),Y,n("div",Z,[$,n("p",null,[s("请求地址： "),n("a",nn,[s("https://store.xsolla.com/api/v2/project/{projectId}/payment/item/{productId}"),t(a)])]),sn]),an,n("div",tn,[pn,n("p",null,[s("直接访问 "),n("a",on,[s("https://sandbox-secure.xsolla.com/paystation4/?token=TOKEN"),t(a)]),s(" 即可跳转到付款页面，当然也可以用iframe中打开")]),n("p",null,[s("使用上面的链接在沙盒模式下打开支付UI。项目发布后，请使用此URL："),n("a",en,[s("https://secure.xsolla.com/paystation4/?token=TOKEN。"),t(a)])])]),cn,n("p",null,[s("可以使用 "),n("a",ln,[s("发布商帐户"),t(a)]),s(" 轻松管理付款：")]),un,n("p",null,[n("a",kn,[s("https://developers.xsolla.com/zh/api/pay-station/operation/request-refund/"),t(a)])]),rn,dn,n("div",mn,[vn,n("p",null,[s("请求地址："),n("a",gn,[s("https://api.xsolla.com/merchant/v2/merchants/{merchant_id}/reports/transactions/{transaction_id}/refund"),t(a)])]),hn,bn]),_n,n("ol",null,[n("li",null,[s("在"),n("a",fn,[s("发布商帐户"),t(a)]),s(" 中打开您的项目。")]),qn]),xn,n("ul",null,[n("li",null,[n("a",In,[s("用户验证"),t(a)])]),n("li",null,[n("a",yn,[s("付款（可以将订单与交易关联起来）"),t(a)])]),n("li",null,[n("a",wn,[s("购买时获取购物车内容"),t(a)])]),n("li",null,[n("a",Sn,[s("退款"),t(a)])]),n("li",null,[n("a",jn,[s("部分退款"),t(a)])])]),On,Mn,Un,n("ul",null,[En,n("li",null,[Rn,s(),n("a",Cn,[s("https://www.jingxc.top/back/payment/java-xsolla.html"),t(a)])]),n("li",null,[Tn,s(" 本博客所有文章除特别声明外，均采用 "),n("a",An,[s("Apache License 2.0"),t(a)]),s(" 许可协议。转载请注明出处！")])])])}const Nn=o(d,[["render",Bn],["__file","java-xsolla.html.vue"]]);export{Nn as default};
