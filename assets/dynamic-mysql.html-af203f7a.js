const n=JSON.parse('{"key":"v-5c0e0e2e","path":"/spring/dynamic-mysql.html","title":"动态数据源","lang":"zh-CN","frontmatter":{"icon":"mysql","date":"2023-08-07T00:00:00.000Z","category":["java","后端"],"tag":["java","后端","Mysql"],"star":true,"description":"动态数据源 在工作中，我们可能会遇到下面这些情况，如果只是在配置文件中配置数据源就有可能太繁琐，或者无法满足要求 需要配置不止一个数据源，数据源的链接信息都不相同 需要在服务运行过程中，动态的添加，减少，切换所使用的数据源 同一服务中不同的接口服务需要调用不同的数据源信息 1.创建当前线程工具类 通过当前线程工具类，保留当前线程数据源信息，防止数据源切换时导致数据错误 package com.game.server.source; import lombok.extern.log4j.Log4j; /** * 保留当前线程数据源信息 * */ @Log4j public class DataSourceContextHolder { /** * 线程级别的私有变量 */ private static final ThreadLocal&lt;String&gt; CONTEXTHOLDER = new ThreadLocal&lt;&gt;(); /** * 切换数据源 */ public static void setDataSource(String datasourceId) { CONTEXTHOLDER.set(datasourceId); log.info(\\"已切换到数据源:{}\\" + datasourceId); } public static String getDataSource() { return CONTEXTHOLDER.get(); } /** * 删除数据源 */ public static void removeDataSource() { CONTEXTHOLDER.remove(); log.info(\\"已切换到主数据源\\"); } }","head":[["meta",{"property":"og:url","content":"https://gitee.com/jing-xingchun/spring/dynamic-mysql.html"}],["meta",{"property":"og:site_name","content":"Jingxc"}],["meta",{"property":"og:title","content":"动态数据源"}],["meta",{"property":"og:description","content":"动态数据源 在工作中，我们可能会遇到下面这些情况，如果只是在配置文件中配置数据源就有可能太繁琐，或者无法满足要求 需要配置不止一个数据源，数据源的链接信息都不相同 需要在服务运行过程中，动态的添加，减少，切换所使用的数据源 同一服务中不同的接口服务需要调用不同的数据源信息 1.创建当前线程工具类 通过当前线程工具类，保留当前线程数据源信息，防止数据源切换时导致数据错误 package com.game.server.source; import lombok.extern.log4j.Log4j; /** * 保留当前线程数据源信息 * */ @Log4j public class DataSourceContextHolder { /** * 线程级别的私有变量 */ private static final ThreadLocal&lt;String&gt; CONTEXTHOLDER = new ThreadLocal&lt;&gt;(); /** * 切换数据源 */ public static void setDataSource(String datasourceId) { CONTEXTHOLDER.set(datasourceId); log.info(\\"已切换到数据源:{}\\" + datasourceId); } public static String getDataSource() { return CONTEXTHOLDER.get(); } /** * 删除数据源 */ public static void removeDataSource() { CONTEXTHOLDER.remove(); log.info(\\"已切换到主数据源\\"); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-07T08:53:47.000Z"}],["meta",{"property":"article:author","content":"Jingxc"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"后端"}],["meta",{"property":"article:tag","content":"Mysql"}],["meta",{"property":"article:published_time","content":"2023-08-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-07T08:53:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"动态数据源\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-07T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-07T08:53:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jingxc\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"1.创建当前线程工具类","slug":"_1-创建当前线程工具类","link":"#_1-创建当前线程工具类","children":[]},{"level":2,"title":"2.创建动态数据源","slug":"_2-创建动态数据源","link":"#_2-创建动态数据源","children":[]},{"level":2,"title":"3.创建动态数据源配置类","slug":"_3-创建动态数据源配置类","link":"#_3-创建动态数据源配置类","children":[{"level":3,"title":"3.1基础数据源配置","slug":"_3-1基础数据源配置","link":"#_3-1基础数据源配置","children":[]},{"level":3,"title":"3.2sharding-jdbc数据源配置","slug":"_3-2sharding-jdbc数据源配置","link":"#_3-2sharding-jdbc数据源配置","children":[]},{"level":3,"title":"动态数据源使用","slug":"动态数据源使用","link":"#动态数据源使用","children":[]}]}],"git":{"createdTime":1691398427000,"updatedTime":1691398427000,"contributors":[{"name":"Jingxc","email":"2584982513@qq.com","commits":1}]},"readingTime":{"minutes":8.42,"words":2525},"filePathRelative":"spring/dynamic-mysql.md","localizedDate":"2023年8月7日","excerpt":"<h1> 动态数据源</h1>\\n<p>在工作中，我们可能会遇到下面这些情况，如果只是在配置文件中配置数据源就有可能太繁琐，或者无法满足要求</p>\\n<ol>\\n<li>需要配置不止一个数据源，数据源的链接信息都不相同</li>\\n<li>需要在服务运行过程中，动态的添加，减少，切换所使用的数据源</li>\\n<li>同一服务中不同的接口服务需要调用不同的数据源信息</li>\\n</ol>\\n<h2> 1.创建当前线程工具类</h2>\\n<p>通过当前线程工具类，保留当前线程数据源信息，防止数据源切换时导致数据错误</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">package</span> <span class=\\"token namespace\\">com<span class=\\"token punctuation\\">.</span>game<span class=\\"token punctuation\\">.</span>server<span class=\\"token punctuation\\">.</span>source</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">lombok<span class=\\"token punctuation\\">.</span>extern<span class=\\"token punctuation\\">.</span>log4j<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Log4j</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token doc-comment comment\\">/**\\n * 保留当前线程数据源信息\\n * \\n */</span>\\n<span class=\\"token annotation punctuation\\">@Log4j</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">DataSourceContextHolder</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 线程级别的私有变量\\n     */</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token class-name\\">ThreadLocal</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token constant\\">CONTEXTHOLDER</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ThreadLocal</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 切换数据源\\n     */</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">setDataSource</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> datasourceId<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token constant\\">CONTEXTHOLDER</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">set</span><span class=\\"token punctuation\\">(</span>datasourceId<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">info</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"已切换到数据源:{}\\"</span> <span class=\\"token operator\\">+</span> datasourceId<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">getDataSource</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token constant\\">CONTEXTHOLDER</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 删除数据源\\n     */</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">removeDataSource</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token constant\\">CONTEXTHOLDER</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">remove</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">info</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"已切换到主数据源\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
